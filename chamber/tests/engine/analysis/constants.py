"""Constants used for analysis engine unit testing."""

import datetime

import pandas as pd
import pytz
import uncertainties as un


settings_dict = dict(
    Duty=[0.0], IsMass=[1.0], TimeStep=[1.0], Reservoir=[1.0], TubeID=[1.0])

setting_obj_as_df = pd.DataFrame(settings_dict)

data_obj_as_df = pd.DataFrame(
    dict(
        TC0=[2572.301, 2572.309, 2572.316, 2572.303, 2572.297],
        TC1=[2572.301, 2572.309, 2572.316, 2572.303, 2572.297],
        TC2=[2572.301, 2572.309, 2572.316, 2572.303, 2572.297],
        TC3=[2572.301, 2572.309, 2572.316, 2572.303, 2572.297],
        TC4=[302.283, 302.285, 302.304, 302.311, 302.311],
        TC5=[300.989, 300.997, 300.998, 301.002, 300.995],
        TC6=[300.914, 300.919, 300.921, 300.920, 300.923],
        TC7=[301.237, 301.244, 301.264, 301.258, 301.256],
        TC8=[301.593, 301.603, 301.601, 301.595, 301.586],
        TC9=[300.829, 300.823, 300.835, 300.826, 300.823],
        TC10=[300.915, 300.914, 300.929, 300.914, 300.909],
        TC11=[300.753, 300.767, 300.771, 300.762, 300.753],
        TC12=[300.860, 300.863, 300.872, 300.859, 300.851],
        TC13=[301.159, 301.167, 301.168, 301.151, 301.147],
        Mass=[0.099029, 0.099029, 0.099029, 0.099029, 0.099029],
        PowRef=[
            -4.794644e-05, 7.621406e-05, -9.593868e-06, -2.524701e-05,
            -6.144859e-07
            ],
        PowOut=[-0.000211, -0.000113, -0.000118, -0.000290, -0.000297],
        DewPoint=[244.424, 244.450, 244.473, 244.476, 244.493],
        Pressure=[80261.060, 80282.947, 80269.815, 80261.060, 80269.815],
        Idx=[12.0, 13.0, 14.0, 15.0, 16.0],
        OptidewOk=[1.0, 1.0, 1.0, 1.0, 1.0],
        CapManOk=[1.0, 1.0, 1.0, 1.0, 1.0]
        )
    )

datetime = datetime.datetime(2018, 9, 5, 23, 53, 44, 570569, pytz.UTC)

test_props_as_df = pd.DataFrame(
    dict(
        Author=['me'],
        DateTime=[datetime],
        Description=['test description.']
        )
    )

correct_temp_observation_df_mass_0 = pd.DataFrame(
    data=dict(
        ThermocoupleNum=[
            0, 0, 0, 0, 0,
            1, 1, 1, 1, 1,
            2, 2, 2, 2, 2,
            3, 3, 3, 3, 3,
            4, 4, 4, 4, 4,
            5, 5, 5, 5, 5,
            6, 6, 6, 6, 6,
            7, 7, 7, 7, 7,
            8, 8, 8, 8, 8,
            9, 9, 9, 9, 9,
            10, 10, 10, 10, 10,
            11, 11, 11, 11, 11,
            12, 12, 12, 12, 12,
            13, 13, 13, 13, 13
            ],
        Temperature=[
            2572.301, 2572.309, 2572.316, 2572.303, 2572.297,
            2572.301, 2572.309, 2572.316, 2572.303, 2572.297,
            2572.301, 2572.309, 2572.316, 2572.303, 2572.297,
            2572.301, 2572.309, 2572.316, 2572.303, 2572.297,
            302.283, 302.285, 302.304, 302.311, 302.311,
            300.989, 300.997, 300.998, 301.002, 300.995,
            300.914, 300.919, 300.921, 300.920, 300.923,
            301.237, 301.244, 301.264, 301.258, 301.256,
            301.593, 301.603, 301.601, 301.595, 301.586,
            300.829, 300.823, 300.835, 300.826, 300.823,
            300.915, 300.914, 300.929, 300.914, 300.909,
            300.753, 300.767, 300.771, 300.762, 300.753,
            300.860, 300.863, 300.872, 300.859, 300.851,
            301.159, 301.167, 301.168, 301.151, 301.147
            ],
        Idx=[
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0
            ]
        )
    )

correct_temp_observation_df_mass_1 = pd.DataFrame(
    data=dict(
        ThermocoupleNum=[
            4, 4, 4, 4, 4,
            5, 5, 5, 5, 5,
            6, 6, 6, 6, 6,
            7, 7, 7, 7, 7,
            8, 8, 8, 8, 8,
            9, 9, 9, 9, 9,
            10, 10, 10, 10, 10,
            11, 11, 11, 11, 11,
            12, 12, 12, 12, 12,
            13, 13, 13, 13, 13
            ],
        Temperature=[
            302.283, 302.285, 302.304, 302.311, 302.311,
            300.989, 300.997, 300.998, 301.002, 300.995,
            300.914, 300.919, 300.921, 300.920, 300.923,
            301.237, 301.244, 301.264, 301.258, 301.256,
            301.593, 301.603, 301.601, 301.595, 301.586,
            300.829, 300.823, 300.835, 300.826, 300.823,
            300.915, 300.914, 300.929, 300.914, 300.909,
            300.753, 300.767, 300.771, 300.762, 300.753,
            300.860, 300.863, 300.872, 300.859, 300.851,
            301.159, 301.167, 301.168, 301.151, 301.147
            ],
        Idx=[
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0,
            12.0, 13.0, 14.0, 15.0, 16.0
            ]
        )
    )

base_obs_col_set = {'CapManOk', 'DewPoint', 'OptidewOk', 'Pressure'}

temp_data_query = pd.DataFrame(
    dict(
        ThermocoupleNum=[
            4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
            4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
            4, 5, 6, 7, 8, 9, 10, 11, 12, 13
            ],
        Temperature=[
            302.28, 300.99, 300.91, 301.24, 301.59, 300.83, 300.92, 300.75,
            300.86, 301.16, 302.29, 301.00, 300.92, 301.24, 301.60, 300.82,
            300.91, 300.77, 300.86, 301.17, 302.30, 301.00, 300.92, 301.26,
            301.60, 300.84, 300.93, 300.77, 300.87, 301.17, 302.31, 301.00,
            300.92, 301.26, 301.60, 300.83, 300.91, 300.76, 300.86, 301.15,
            302.31, 301.00, 300.92, 301.26, 301.59, 300.82, 300.91, 300.75,
            300.85, 301.15
            ],
        Idx=[
            12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
            13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
            14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
            16, 16, 16, 16, 16, 16, 16, 16, 16, 16
            ]
        )
    )

correct_average_temp_uncertainties = pd.DataFrame(
    data=dict(
        AvgTe=[
            un.ufloat(301.153, 0.4668106920607228),
            un.ufloat(301.158, 0.46908421418760887),
            un.ufloat(301.166, 0.4687619628103208),
            un.ufloat(301.16, 0.4750204673952965),
            un.ufloat(301.15600000000006, 0.4764265129295566),
            ]
        ),
    index=[12, 13, 14, 15, 16]
    )
correct_average_temp_uncertainties.index.name = 'Idx'

phi_testing_df = pd.DataFrame(
        data=[
            un.ufloat(0.06, 0.01), un.ufloat(0.12, 0.01),
            un.ufloat(0.18, 0.01), un.ufloat(0.24, 0.01),
            un.ufloat(0.30, 0.01), un.ufloat(0.36, 0.01),
            un.ufloat(0.42, 0.01), un.ufloat(0.48, 0.01),
            un.ufloat(0.54, 0.01), un.ufloat(0.60, 0.01),
            un.ufloat(0.66, 0.01), un.ufloat(0.72, 0.01)
            ],
        index=[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
        columns=['phi']
        )

chi2_test_data = pd.DataFrame(
    index=list(range(29750, 30251)),
    data=[
        0.098650326, 0.09865032, 0.098650314, 0.098650308, 0.098650302,
        0.098650296, 0.09865029, 0.098650284, 0.098650278, 0.098650272,
        0.098650266, 0.09865026, 0.098650254, 0.098650248, 0.098650243,
        0.098650237, 0.098650231, 0.098650225, 0.09865022, 0.098650215,
        0.098650209, 0.098650203, 0.098650198, 0.098650192, 0.098650186,
        0.09865018, 0.098650174, 0.098650168, 0.098650162, 0.098650157,
        0.098650151, 0.098650145, 0.098650139, 0.098650133, 0.098650127,
        0.098650121, 0.098650115, 0.09865011, 0.098650104, 0.098650098,
        0.098650092, 0.098650086, 0.09865008, 0.098650074, 0.098650069,
        0.098650063, 0.098650057, 0.098650051, 0.098650045, 0.09865004,
        0.098650034, 0.098650028, 0.098650021, 0.098650015, 0.098650009,
        0.098650003, 0.098649997, 0.09864999, 0.098649984, 0.098649978,
        0.098649972, 0.098649966, 0.09864996, 0.098649955, 0.098649949,
        0.098649944, 0.098649938, 0.098649933, 0.098649927, 0.098649921,
        0.098649915, 0.098649909, 0.098649903, 0.098649897, 0.098649892,
        0.098649886, 0.09864988, 0.098649874, 0.098649869, 0.098649863,
        0.098649858, 0.098649852, 0.098649847, 0.098649841, 0.098649836,
        0.09864983, 0.098649825, 0.098649819, 0.098649813, 0.098649808,
        0.098649802, 0.098649797, 0.098649791, 0.098649786, 0.09864978,
        0.098649775, 0.098649769, 0.098649763, 0.098649758, 0.098649752,
        0.098649747, 0.098649741, 0.098649735, 0.098649729, 0.098649723,
        0.098649717, 0.098649711, 0.098649705, 0.098649699, 0.098649693,
        0.098649687, 0.098649681, 0.098649675, 0.098649669, 0.098649664,
        0.098649658, 0.098649652, 0.098649646, 0.098649641, 0.098649635,
        0.098649629, 0.098649623, 0.098649618, 0.098649612, 0.098649606,
        0.0986496, 0.098649595, 0.098649589, 0.098649583, 0.098649577,
        0.098649572, 0.098649567, 0.098649562, 0.098649557, 0.098649551,
        0.098649545, 0.098649539, 0.098649533, 0.098649527, 0.09864952,
        0.098649514, 0.098649508, 0.098649502, 0.098649497, 0.098649491,
        0.098649486, 0.098649479, 0.098649473, 0.098649467, 0.098649461,
        0.098649455, 0.098649449, 0.098649443, 0.098649438, 0.098649432,
        0.098649426, 0.09864942, 0.098649415, 0.098649409, 0.098649403,
        0.098649397, 0.098649392, 0.098649386, 0.09864938, 0.098649374,
        0.098649369, 0.098649363, 0.098649357, 0.098649351, 0.098649345,
        0.098649339, 0.098649333, 0.098649327, 0.09864932, 0.098649313,
        0.098649307, 0.0986493, 0.098649293, 0.098649287, 0.09864928,
        0.098649274, 0.098649268, 0.098649262, 0.098649256, 0.09864925,
        0.098649245, 0.098649239, 0.098649233, 0.098649227, 0.098649221,
        0.098649216, 0.09864921, 0.098649204, 0.098649198, 0.098649192,
        0.098649186, 0.098649181, 0.098649175, 0.098649169, 0.098649163,
        0.098649157, 0.098649152, 0.098649146, 0.09864914, 0.098649134,
        0.098649129, 0.098649123, 0.098649118, 0.098649112, 0.098649107,
        0.098649101, 0.098649095, 0.09864909, 0.098649084, 0.098649078,
        0.098649073, 0.098649067, 0.098649061, 0.098649056, 0.09864905,
        0.098649045, 0.098649039, 0.098649034, 0.098649028, 0.098649023,
        0.098649017, 0.098649011, 0.098649005, 0.098648999, 0.098648994,
        0.098648989, 0.098648983, 0.098648978, 0.098648972, 0.098648966,
        0.09864896, 0.098648953, 0.098648947, 0.09864894, 0.098648934,
        0.098648928, 0.098648922, 0.098648916, 0.09864891, 0.098648903,
        0.098648897, 0.098648891, 0.098648884, 0.098648878, 0.098648872,
        0.098648865, 0.098648859, 0.098648852, 0.098648846, 0.09864884,
        0.098648834, 0.098648828, 0.098648822, 0.098648816, 0.09864881,
        0.098648804, 0.098648799, 0.098648793, 0.098648787, 0.098648782,
        0.098648776, 0.09864877, 0.098648764, 0.098648758, 0.098648752,
        0.098648745, 0.098648739, 0.098648733, 0.098648728, 0.098648722,
        0.098648716, 0.098648711, 0.098648705, 0.098648699, 0.098648694,
        0.098648688, 0.098648682, 0.098648677, 0.098648671, 0.098648665,
        0.09864866, 0.098648654, 0.098648649, 0.098648644, 0.098648638,
        0.098648632, 0.098648626, 0.09864862, 0.098648614, 0.098648608,
        0.098648602, 0.098648597, 0.098648591, 0.098648586, 0.09864858,
        0.098648575, 0.098648569, 0.098648563, 0.098648557, 0.098648551,
        0.098648545, 0.098648539, 0.098648533, 0.098648527, 0.098648521,
        0.098648515, 0.098648509, 0.098648503, 0.098648497, 0.098648492,
        0.098648486, 0.098648481, 0.098648476, 0.09864847, 0.098648464,
        0.098648458, 0.098648452, 0.098648446, 0.09864844, 0.098648434,
        0.098648428, 0.098648422, 0.098648416, 0.098648411, 0.098648405,
        0.0986484, 0.098648394, 0.098648389, 0.098648383, 0.098648377,
        0.098648371, 0.098648365, 0.098648359, 0.098648354, 0.098648348,
        0.098648343, 0.098648337, 0.098648332, 0.098648326, 0.098648321,
        0.098648315, 0.098648309, 0.098648304, 0.098648299, 0.098648293,
        0.098648288, 0.098648283, 0.098648278, 0.098648273, 0.098648268,
        0.098648262, 0.098648257, 0.098648252, 0.098648247, 0.098648242,
        0.098648236, 0.098648231, 0.098648226, 0.09864822, 0.098648215,
        0.098648209, 0.098648203, 0.098648198, 0.098648192, 0.098648186,
        0.098648181, 0.098648175, 0.098648169, 0.098648164, 0.098648158,
        0.098648153, 0.098648147, 0.098648142, 0.098648136, 0.098648129,
        0.098648123, 0.098648116, 0.09864811, 0.098648103, 0.098648097,
        0.098648091, 0.098648085, 0.098648079, 0.098648073, 0.098648067,
        0.098648061, 0.098648055, 0.098648049, 0.098648043, 0.098648037,
        0.098648031, 0.098648025, 0.098648019, 0.098648013, 0.098648007,
        0.098648001, 0.098647995, 0.098647989, 0.098647984, 0.098647978,
        0.098647972, 0.098647966, 0.09864796, 0.098647954, 0.098647948,
        0.098647942, 0.098647936, 0.098647931, 0.098647925, 0.09864792,
        0.098647914, 0.098647907, 0.098647901, 0.098647894, 0.098647888,
        0.098647881, 0.098647875, 0.098647869, 0.098647863, 0.098647857,
        0.098647851, 0.098647845, 0.098647839, 0.098647833, 0.098647827,
        0.098647821, 0.098647815, 0.098647809, 0.098647803, 0.098647797,
        0.098647791, 0.098647786, 0.09864778, 0.098647775, 0.098647769,
        0.098647764, 0.098647758, 0.098647753, 0.098647747, 0.098647741,
        0.098647735, 0.098647729, 0.098647723, 0.098647717, 0.098647711,
        0.098647705, 0.098647699, 0.098647693, 0.098647687, 0.09864768,
        0.098647674, 0.098647668, 0.098647662, 0.098647656, 0.09864765,
        0.098647644, 0.098647638, 0.098647632, 0.098647626, 0.09864762,
        0.098647615, 0.098647609, 0.098647603, 0.098647597, 0.098647591,
        0.098647585, 0.098647579, 0.098647573, 0.098647568, 0.098647562,
        0.098647557, 0.098647551, 0.098647546, 0.098647541, 0.098647536,
        0.09864753, 0.098647524, 0.098647519, 0.098647513, 0.098647507,
        0.0986475, 0.098647494, 0.098647489, 0.098647483, 0.098647477,
        0.098647471, 0.098647466, 0.09864746, 0.098647454, 0.098647448,
        0.098647442, 0.098647437, 0.098647431, 0.098647425, 0.098647419,
        0.098647413
        ],
    columns=['Mass']
    )

tube_tc_set = {'TC0', 'TC1', 'TC2', 'TC3'}
c20_pow_set = {'PowOut', 'PowRef'}
